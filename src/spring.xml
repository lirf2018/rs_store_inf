<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:component-scan base-package="com.yufan"/>

    <bean id="serviceFactory" class="com.yufan.service.ServiceFactory"/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:database.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${database.driverClass}"></property>
        <property name="jdbcUrl" value="${database.driverUrl}"></property>
        <property name="user" value="${database.user}"/>
        <property name="password" value="${database.password}"/>

        <property name="maxPoolSize" value="${database.c3p0.maxPoolSize}"/>
        <property name="initialPoolSize" value="${database.c3p0.initialPoolSize}"/>
        <!--<property name="maxIdleTime" value="${database.c3p0.maxIdleTime}"/>-->
        <!--<property name="acquireIncrement" value="${database.c3p0.acquireIncrement}"/>-->
    </bean>

    <!-- 配置Hibernate的SessionFactory，通过spring提供的 LocalSessionFactoryBean配置-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
            </props>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath*:com/yufan/pojo/*.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!-- 配置 Spring 的声明式事物 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
    </bean>
    <!--  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="insert*" propagation="REQUIRED" />-->
    <!--<tx:method name="update*" propagation="REQUIRED" />-->
    <!--<tx:method name="edit*" propagation="REQUIRED" />-->
    <!--<tx:method name="save*" propagation="REQUIRED" />-->
    <!--<tx:method name="add*" propagation="REQUIRED" />-->
    <!--<tx:method name="new*" propagation="REQUIRED" />-->
    <!--<tx:method name="set*" propagation="REQUIRED" />-->
    <!--<tx:method name="remove*" propagation="REQUIRED" />-->
    <!--<tx:method name="delete*" propagation="REQUIRED" />-->
    <!--<tx:method name="change*" propagation="REQUIRED" />-->
    <!--<tx:method name="get*" propagation="REQUIRED"/>-->
    <!--<tx:method name="find*" propagation="REQUIRED" />-->
    <!--<tx:method name="load*" propagation="REQUIRED" />-->
    <!--<tx:method name="query*" propagation="REQUIRED"/>-->
    <!--&lt;!&ndash;<tx:method name="get*" propagation="REQUIRED" read-only="true" />&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:method name="find*" propagation="REQUIRED" read-only="true" />&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:method name="load*" propagation="REQUIRED" read-only="true" />&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:method name="query*" propagation="REQUIRED" read-only="true" />&ndash;&gt;-->
    <!--&lt;!&ndash;<tx:method name="*"  read-only="true" />&ndash;&gt;-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--<aop:config expose-proxy="true">-->
    <!--&lt;!&ndash; 只对业务逻辑层实施事务 &ndash;&gt;-->
    <!--<aop:pointcut id="txPointcut" expression="execution(public * com.yufan.task..*.*(..))"/>-->
    <!--&lt;!&ndash; Advisor定义，切入点和通知分别为txPointcut、txAdvice &ndash;&gt;-->
    <!--<aop:advisor   pointcut-ref="txPointcut" advice-ref="txAdvice"/>-->
    <!--</aop:config>-->

    <!-- 开启事务管理注解 -->
    <tx:annotation-driven/>
    <aop:aspectj-autoproxy/>
</beans>

